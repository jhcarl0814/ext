@PACKAGE_INIT@

cmake_minimum_required(VERSION 3.28)
include(CMakeFindDependencyMacro)
find_dependency(Boost 1.83.0)
find_dependency(Qt6
	OPTIONAL_COMPONENTS Core Gui Widgets WebEngineWidgets
)

if("web" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_web)
		set(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_widgets TRUE)
	endif()
	if(NOT "widgets" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
		list(APPEND ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS "widgets")
	endif()
endif()
if("widgets" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_widgets)
		set(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_gui TRUE)
	endif()
	if(NOT "gui" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
		list(APPEND ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS "gui")
	endif()
endif()
if("gui" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_gui)
		set(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_core TRUE)
	endif()
	if(NOT "core" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
		list(APPEND ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS "core")
	endif()
endif()
if("core" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_core)
		set(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_infrastructure TRUE)
	endif()
	if(NOT "infrastructure" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
		list(APPEND ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS "infrastructure")
	endif()
endif()
if("infrastructure" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_infrastructure)
		set(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_headers TRUE)
	endif()
	if(NOT "headers" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
		list(APPEND ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS "headers")
	endif()
endif()

if("headers" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_headers)
	if(NOT Boost_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Boost) of required component: headers")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_headers_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: headers")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()
if("infrastructure" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_infrastructure)
	if(NOT Boost_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Boost) of required component: infrastructure")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT Qt6Gui_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Qt6::Gui) of required component: infrastructure")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_infrastructure_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: infrastructure")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()
if("core" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_core)
	if(NOT Qt6Widgets_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Qt6::Widgets) of required component: core")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_core_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: core")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()
if("gui" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_gui)
	if(NOT Qt6Widgets_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Qt6::Widgets) of required component: gui")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_gui_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: gui")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()
if("widgets" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_widgets)
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_widgets_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: widgets")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()
if("web" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS AND ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_web)
	if(NOT Qt6WebEngineWidgets_FOUND)
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing dependency (Qt6::WebEngineWidgets) of required component: web")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_web_development.cmake")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "@PROJECT_NAME@ missing config file of required component: web")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endif()

if("headers" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_headers_development.cmake" OPTIONAL)
endif()
if("infrastructure" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_infrastructure_development.cmake" OPTIONAL)
endif()
if("core" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_core_development.cmake" OPTIONAL)
endif()
if("gui" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_gui_development.cmake" OPTIONAL)
endif()
if("widgets" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_widgets_development.cmake" OPTIONAL)
endif()
if("web" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@_web_development.cmake" OPTIONAL)
endif()
